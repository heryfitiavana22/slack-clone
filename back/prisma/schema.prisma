generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  email            String        @unique
  name             String
  password         String
  workspaces       Workspace[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  chatChannel      ChatChannel[] @relation("sendChatChannel")
  sentMessages     ChatPrivate[] @relation("SentMessages")
  receivedMessages ChatPrivate[] @relation("ReceivedMessages")
  ChatChannel      ChatChannel[] @relation("seenChatChannel")
}

model Workspace {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  channels  Channel[]
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Channel {
  id          Int           @id @default(autoincrement())
  name        String
  workspace   Workspace     @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  ChatChannel ChatChannel[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@unique([workspaceId, name])
}

model ChatChannel {
  id          Int      @id @default(autoincrement())
  content     String
  sender      User     @relation("sendChatChannel", fields: [senderId], references: [id])
  senderId    Int
  channel     Channel  @relation(fields: [channelId], references: [id])
  channelId   Int
  seenByUsers User[]   @relation("seenChatChannel")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ChatPrivate {
  id         Int      @id @default(autoincrement())
  content    String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
